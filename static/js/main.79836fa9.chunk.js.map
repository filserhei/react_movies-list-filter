{"version":3,"sources":["components/SearchField/SearchField.jsx","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["SearchField","labelContent","value","onChange","className","htmlFor","type","id","placeholder","MovieCard","title","description","imgUrl","imdbUrl","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","App","state","query","addToQuery","event","setState","target","toLowerCase","this","filteredMovies","moviesFromServer","filter","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"8vEAGaA,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,SAAxB,OACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOC,QAAQ,eAAeD,UAAU,SACrCH,GAGH,yBAAKG,UAAU,WACb,2BACEE,KAAK,OACLC,GAAG,eACHH,UAAU,QACVI,YAAY,mBACZN,MAAOA,EACPC,SAAUA,SCbPM,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKT,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEU,IAAKF,EACLG,IAAI,gBAIV,yBAAKX,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEU,IAAI,wBACJC,IAAI,WAIV,yBAAKX,UAAU,iBACb,uBAAGA,UAAU,cAAcM,KAI/B,yBAAKN,UAAU,WACZO,EACD,6BACA,uBAAGK,KAAMH,GAAT,aAaRJ,EAAUQ,aAAe,CACvBN,YAAa,ICxCR,IAAMO,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKf,UAAU,UACZe,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCpBGK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZH,MAAOE,EAAME,OAAO5B,MAAM6B,iBAPhC,4CAWE,WACE,IAAQL,EAAUM,KAAKP,MAAfC,MAEFO,EAAiBC,EAAiBC,QACtC,SAAAd,GAAK,OAAIA,EAAMX,MAAMqB,cAAcK,SAASV,IACvCL,EAAMV,YAAYoB,cAAcK,SAASV,MAGhD,OACE,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,aAAa,eACbC,MAAOwB,EACPvB,SAAU6B,KAAKL,aAEjB,kBAAC,EAAD,CAAYR,OAAQc,KAEtB,yBAAK7B,UAAU,WAAf,0BA7BR,GAAyBiC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.79836fa9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchField = ({ labelContent, value, onChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        {labelContent}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nSearchField.propTypes = {\n  labelContent: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { SearchField } from './components/SearchField';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  addToQuery = (event) => {\n    this.setState({\n      query: event.target.value.toLowerCase(),\n    });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    const filteredMovies = moviesFromServer.filter(\n      movie => movie.title.toLowerCase().includes(query)\n        || movie.description.toLowerCase().includes(query),\n    );\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchField\n            labelContent=\"Search movie\"\n            value={query}\n            onChange={this.addToQuery}\n          />\n          <MoviesList movies={filteredMovies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}